"use strict";(self.webpackChunkcrossmint_embedded_checkout=self.webpackChunkcrossmint_embedded_checkout||[]).push([[19871],{19871:(t,n,c)=>{c.d(n,{autoConnectInAppWallet:()=>o,connectInAppWallet:()=>a});var e=c(73315);async function a(t,n){const{authenticate:a}=await Promise.resolve().then(c.bind(c,34458)),o=(await a(t)).user.account;return n?.smartAccount?i({client:t.client,authAccount:o,smartAccountOptions:n.smartAccount,chain:t.chain}):[o,t.chain||n?.smartAccount?.chain||e.u]}async function o(t,n){const{getAuthenticatedUser:a}=await Promise.resolve().then(c.bind(c,34458)),o=await a({client:t.client});if(!o)throw new Error("not authenticated");const s=o.account;return n?.smartAccount?i({client:t.client,authAccount:s,smartAccountOptions:n.smartAccount,chain:t.chain}):[s,t.chain||n?.smartAccount?.chain||e.u]}async function i(t){const[{smartWallet:n},{connectSmartWallet:e}]=await Promise.all([Promise.resolve().then(c.bind(c,17814)),c.e(69894).then(c.bind(c,69894))]);return e(n(t.smartAccountOptions),{client:t.client,personalAccount:t.authAccount,chain:t.chain},t.smartAccountOptions)}}}]);