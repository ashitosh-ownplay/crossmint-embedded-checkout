name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: yarn install

      - name: Create .env file
        run: |
          echo "CHAIN_NAME=${{ secrets.CHAIN_NAME }}" >> .env
          echo "USDC_ENABLED=${{ secrets.USDC_ENABLED }}" >> .env
          echo "TW_CLIENT_ID=${{ secrets.TW_CLIENT_ID }}" >> .env
          echo "BACKEND_WALLET_PK=${{ secrets.BACKEND_WALLET_PK }}" >> .env
          echo "CROSSMINT_ENV=${{ secrets.CROSSMINT_ENV }}" >> .env
          echo "ENABLE_IN_APP_WALLET=${{ secrets.ENABLE_IN_APP_WALLET }}" >> .env
          echo "CROSSMINT_PROJECT_ID=${{ secrets.CROSSMINT_PROJECT_ID }}" >> .env

      - name: Build project
        run: yarn run build

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v3
        with:
          name: production-files
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      CHAIN_NAME: ${{ secrets.CHAIN_NAME }}
      USDC_ENABLED: ${{ secrets.USDC_ENABLED }}
      TW_CLIENT_ID: ${{ secrets.TW_CLIENT_ID }}
      BACKEND_WALLET_PK: ${{ secrets.BACKEND_WALLET_PK }}
      CROSSMINT_ENV: ${{ secrets.CROSSMINT_ENV }}
      ENABLE_IN_APP_WALLET: ${{ secrets.ENABLE_IN_APP_WALLET }}
      CROSSMINT_PROJECT_ID: ${{ secrets.CROSSMINT_PROJECT_ID }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: production-files
          path: ./dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
